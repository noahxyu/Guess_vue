{
  "_args": [
    [
      {
        "raw": "debug-fabulous@1.X",
        "scope": null,
        "escapedName": "debug-fabulous",
        "name": "debug-fabulous",
        "rawSpec": "1.X",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/noahchang/samba/demo/my/guess_number/node_modules/gulp-sourcemaps"
    ]
  ],
  "_from": "debug-fabulous@>=1.0.0 <2.0.0",
  "_id": "debug-fabulous@1.1.0",
  "_inCache": true,
  "_location": "/debug-fabulous",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/debug-fabulous_1.1.0_1522265490043_0.8523945748688047"
  },
  "_npmUser": {
    "name": "nmccready",
    "email": "nemtcan@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "ms": "2.0.0"
  },
  "_requested": {
    "raw": "debug-fabulous@1.X",
    "scope": null,
    "escapedName": "debug-fabulous",
    "name": "debug-fabulous",
    "rawSpec": "1.X",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gulp-sourcemaps"
  ],
  "_resolved": "https://registry.npmjs.org/debug-fabulous/-/debug-fabulous-1.1.0.tgz",
  "_shasum": "af8a08632465224ef4174a9f06308c3c2a1ebc8e",
  "_shrinkwrap": null,
  "_spec": "debug-fabulous@1.X",
  "_where": "/home/noahchang/samba/demo/my/guess_number/node_modules/gulp-sourcemaps",
  "author": {
    "name": "Nicholas McCready"
  },
  "dependencies": {
    "debug": "3.X",
    "memoizee": "0.4.X",
    "object-assign": "4.X"
  },
  "description": "visionmedia debug extensions rolled into one",
  "devDependencies": {
    "JSONStream": "1.X",
    "chai": "4.X",
    "eslint": "4.X",
    "hook-std": "0.X",
    "memwatch-next": "0.3.X",
    "mocha": "4.X"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-GZqvGIgKNlUnHUPQhepnUZFIMoi3dgZKQBzKDeL2g7oJF9SNAji/AAu36dusFUas0O+pae74lNeoIPHqXWDkLg==",
    "shasum": "af8a08632465224ef4174a9f06308c3c2a1ebc8e",
    "tarball": "https://registry.npmjs.org/debug-fabulous/-/debug-fabulous-1.1.0.tgz",
    "fileCount": 10,
    "unpackedSize": 78832
  },
  "gitHead": "f0abc30537b86a4e409b3c5bb771a8a1e8fb6e78",
  "keywords": [
    "debug",
    "lazy",
    "lazy-eval"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "nmccready",
      "email": "nemtcan@gmail.com"
    }
  ],
  "name": "debug-fabulous",
  "optionalDependencies": {},
  "readme": "# debug-fabulous [![NPM version][npm-image]][npm-url] [![build status][travis-image]][travis-url]\n\n## Install\n\n`npm install --save debug-fabulous`\n\n## Purpose:\n\nWrapper / Extension around [visionmedia's debug](https://github.com/visionmedia/debug) to allow lazy evaluation of debugging via closure handling.\n\n## Why would I consider using this library?\n\nThe main utilities added to this library is lazy log level evaluation. This allows whatever logged strings to only be created and evaluated if a log level is active. This can considerably reduce the amount of memory used in logging when you are not using.\n\nWith this in mind, there are no excuses to not log anything and everything as performance can be kept in check easily (via log levels).\n\n### Proof\n\nFor analysis of the performance results are in [perfWith.out](./test/perf/perfWith.out) and [perfWithout.out](./test/perf/perfWithout.out).\n\nIn summary, the tests using this library are using 3 times less memory for the same logging statements (when the log levels are disabled).\n\n## This library essentially wraps two things:\n\n- [lazy-eval](./src/lazy-eval.js): debug closure handling\n- [spawn](./src/spawn.js): spawns off existing namespaces for a sub namespace.\n\n## Example:\n\nFor usage see the [tests](./test) or the example below.\n\n```js\nvar debug = require('')();\n// force namespace to be enabled otherwise it assumes process.env.DEBUG is setup\n// debug.save('namespace');\n// debug.enable(debug.load())\ndebug = debug('namespace'); // debugger in the namespace\ndebug(function(){return 'something to log' + someLargeHarryString;});\ndebug(() => 'something to log ${someLargeHarryString}');\ndebug('small out'); // prints namespace small out\nvar childDbg = debug.spawn('child'); // debugger in the namespace:child\nchildDbg('small out'); // prints namespace:child small out\nvar grandChildDbg = debug.spawn('grandChild'); // debugger in the namespace:child:grandChild\ngrandChildDbg('small out'); // prints namespace:child:grandChild small out\n```\n\n[npm-image]: https://img.shields.io/npm/v/debug-fabulous.svg\n[npm-url]: https://www.npmjs.com/package/debug-fabulous\n[travis-image]: https://img.shields.io/travis/nmccready/debug-fabulous.svg\n[travis-url]: https://travis-ci.org/nmccready/debug-fabulous\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "http://www.github.com/nmccready/debug-fabulous"
  },
  "scripts": {
    "lint": "eslint !./node_modules *.js ./**/*.js",
    "mocha": "mocha",
    "test": "npm run lint && mocha ./test/**/*test.js ./test/*.test.js"
  },
  "version": "1.1.0"
}
