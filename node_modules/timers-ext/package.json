{
  "_args": [
    [
      {
        "raw": "timers-ext@^0.1.2",
        "scope": null,
        "escapedName": "timers-ext",
        "name": "timers-ext",
        "rawSpec": "^0.1.2",
        "spec": ">=0.1.2 <0.2.0",
        "type": "range"
      },
      "/home/noahchang/samba/demo/my/guess_number/node_modules/memoizee"
    ]
  ],
  "_from": "timers-ext@>=0.1.2 <0.2.0",
  "_id": "timers-ext@0.1.5",
  "_inCache": true,
  "_location": "/timers-ext",
  "_nodeVersion": "9.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/timers-ext_0.1.5_1520949969638_0.7542956111268373"
  },
  "_npmUser": {
    "name": "medikoo",
    "email": "medikoo+npm@medikoo.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "timers-ext@^0.1.2",
    "scope": null,
    "escapedName": "timers-ext",
    "name": "timers-ext",
    "rawSpec": "^0.1.2",
    "spec": ">=0.1.2 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/memoizee"
  ],
  "_resolved": "https://registry.npmjs.org/timers-ext/-/timers-ext-0.1.5.tgz",
  "_shasum": "77147dd4e76b660c2abb8785db96574cbbd12922",
  "_shrinkwrap": null,
  "_spec": "timers-ext@^0.1.2",
  "_where": "/home/noahchang/samba/demo/my/guess_number/node_modules/memoizee",
  "author": {
    "name": "Mariusz Nowak",
    "email": "medyk@medikoo.com",
    "url": "http://www.medikoo.com/"
  },
  "bugs": {
    "url": "https://github.com/medikoo/timers-ext/issues"
  },
  "dependencies": {
    "es5-ext": "~0.10.14",
    "next-tick": "1"
  },
  "description": "Timers extensions",
  "devDependencies": {
    "eslint": "^4.18.1",
    "eslint-config-medikoo-es5": "^1.4.7",
    "tad": "^0.2.7"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-tsEStd7kmACHENhsUPaxb8Jf8/+GZZxyNFQbZD07HQOyooOa6At1rQqjffgvg7n+dxscQa9cjjMdWhJtsP2sxg==",
    "shasum": "77147dd4e76b660c2abb8785db96574cbbd12922",
    "tarball": "https://registry.npmjs.org/timers-ext/-/timers-ext-0.1.5.tgz",
    "fileCount": 23,
    "unpackedSize": 13886
  },
  "eslintConfig": {
    "extends": "medikoo-es5",
    "root": true,
    "globals": {
      "clearInterval": true,
      "clearTimeout": true,
      "setInterval": true,
      "setTimeout": true
    }
  },
  "gitHead": "3be933914750faa8efa4fe0a341acb89de152b4b",
  "homepage": "https://github.com/medikoo/timers-ext#readme",
  "keywords": [
    "timeout",
    "delay",
    "interval",
    "time",
    "timer",
    "timers"
  ],
  "license": "ISC",
  "maintainers": [
    {
      "name": "medikoo",
      "email": "medikoo+npm@medikoo.com"
    }
  ],
  "name": "timers-ext",
  "optionalDependencies": {},
  "readme": "[![Build status][nix-build-image]][nix-build-url]\n[![Windows status][win-build-image]][win-build-url]\n![Transpilation status][transpilation-image]\n[![npm version][npm-image]][npm-url]\n\n# timers-ext\n\n## Timers extensions\n\n### Installation\n\n    $ npm install timers-ext\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### API\n\n#### MAX_TIMEOUT _(timers-ext/max-timeout)_\n\nMaximum possible timeout value in milliseconds. It equals to maximum positive value for 32bit signed integer, so _2³¹ (2147483647)_, which makes it around 24.9 days\n\n#### delay(fn[, timeout]) _(timers-ext/delay)_\n\nReturns function which when invoked will call _fn_ function after specified\n_timeout_. If _timeout_ is not provided [nextTick](https://github.com/medikoo/next-tick/#next-tick) propagation is used.\n\n#### once(fn[, timeout]) _(timers-ext/once)_\n\nMakes sure to execute _fn_ function only once after a defined interval of time (debounce). If _timeout_ is not provided [nextTick](https://github.com/medikoo/next-tick/#next-tick) propagation is used.\n\n```javascript\nvar nextTick = require(\"next-tick\");\nvar logFoo = function() {\n\tconsole.log(\"foo\");\n};\nvar logFooOnce = require(\"timers-ext/once\")(logFoo);\n\nlogFooOnce();\nlogFooOnce(); // ignored, logFoo will be logged only once\nlogFooOnce(); // ignored\n\nnextTick(function() {\n\tlogFooOnce(); // Invokes another log (as tick passed)\n\tlogFooOnce(); // ignored\n\tlogFooOnce(); // ignored\n});\n```\n\n#### validTimeout(timeout) _(timers-ext/valid-timeout)_\n\nValidates timeout value.  \nFor `NaN` resolved _timeout_ `0` is returned.\nIf _timeout_ resolves to a number:\n\n*   for _timeout < 0_ `0` is returned\n*   for _0 >= timeout <= [MAX_TIMEOUT](#max_timeout-timers-extmax-timeout)_, `timeout` value is returned\n*   for _timeout > [MAX_TIMEOUT](#max_timeout-timers-extmax-timeout)_ exception is thrown\n\n### Tests\n\n    $ npm test\n\n[nix-build-image]: https://semaphoreci.com/api/v1/medikoo-org/timers-ext/branches/master/shields_badge.svg\n[nix-build-url]: https://semaphoreci.com/medikoo-org/timers-ext\n[win-build-image]: https://ci.appveyor.com/api/projects/status/2i5nerowov2ho3o9?svg=true\n[win-build-url]: https://ci.appveyor.com/project/medikoo/timers-ext\n[transpilation-image]: https://img.shields.io/badge/transpilation-free-brightgreen.svg\n[npm-image]: https://img.shields.io/npm/v/timers-ext.svg\n[npm-url]: https://www.npmjs.com/package/timers-ext\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/medikoo/timers-ext.git"
  },
  "scripts": {
    "lint": "eslint --ignore-path=.gitignore .",
    "test": "node node_modules/tad/bin/tad"
  },
  "version": "0.1.5"
}
